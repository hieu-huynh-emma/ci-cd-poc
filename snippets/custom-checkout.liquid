{% assign saved = 0.00 %}
{% for item in checkout.line_items %}
  {% if item.variant.compare_at_price != item.final_price %}
    {% assign saved = item.variant.compare_at_price | minus: item.final_price | times: item.quantity | plus: saved %}
  {% endif %}
{% endfor %}
{% assign saved = saved | minus: checkout.discounts_savings %}
{% if request.locale.iso_code == 'fr' %}
  {% assign saved_amount = saved | money_without_currency | replace: '.', ',' | append: ' $' %}
{% else %}
  {% assign saved_amount = saved | money %}
{% endif %}

<script type="text/javascript">
  const PAYMENT_GATEWAYS_NOT_ALLOWED = ["offsite"];
  const TAXES = [
    { value: "AB", labels: ["GST"], totalRate: 5 },
    { value: "NT", labels: ["GST"], totalRate: 5 },
    { value: "NU", labels: ["GST"], totalRate: 5 },
    { value: "YT", labels: ["GST"], totalRate: 5 },
    { value: "NB", labels: ["HST"], totalRate: 15 },
    { value: "NL", labels: ["HST"], totalRate: 15 },
    { value: "NS", labels: ["HST"], totalRate: 15 },
    { value: "ON", labels: ["HST"], totalRate: 13 },
    { value: "BC", labels: [{ subLabel: "PST", rate: 7 }, { subLabel: "GST", rate: 5 }] },
    { value: "MB", labels: [{ subLabel: "GST", rate: 5 }, { subLabel: "RST", rate: 7 }] },
    { value: "QC", labels: [{ subLabel: "GST", rate: 5 }, { subLabel: "QST", rate: 9.98 }] },
    { value: "SK", labels: [{ subLabel: "PST", rate: 6 }, { subLabel: "GST", rate: 5 }] },
  ];

  (function ($) {
    var totalSavedText = '{% if saved > 0 %}{{ 'shopify.checkout.order_summary.you_save' | t: saved: saved_amount }}{% endif %}';
    var totalAmountText = $('[data-checkout-payment-due-target]').text();
    var discountCode = $('.reduction-code').length ? $('.reduction-code').text() : null;

    window.PhoneNumberInputFormatter = function () { return false; };

    $(this).scrollTop(0);
    
    $(document).on("page:load page:change", function () {
      $('.main__header .logo').on('click', function (e) {
        e.preventDefault();
        showConfirmPopup($);
      });

      $('.banner .logo').on('click', function (e) {
        e.preventDefault();
        showConfirmPopup($);
      });

      if (Shopify.Checkout.step === 'contact_information') {
        $('body').addClass("upselll_show_information");
        $('#review-shipping-address').remove();

        var $dynamicCheckoutTitle = $('.dynamic-checkout h2.dynamic-checkout__title');
        if ($dynamicCheckoutTitle) {
          $dynamicCheckoutTitle.addClass('section__title');
        }

        var $alternativePaymentSeparatorContent = $('.alternative-payment-separator__content');
        if ($alternativePaymentSeparatorContent) {
          var content = "{{ 'shopify.checkout.continue_with_credit' | t }}";
          $alternativePaymentSeparatorContent.text(content);
        }

        addTaxesBreakdown($);

        let $phoneField = $('[name="checkout[shipping_address][phone]"]:not([tabindex="-1"])');
        phoneNumberValidated = false;
        validatePhoneNumber($phoneField);

        // Run validator if there is a previously cached phone number
        if ($phoneField.val() !== '') {
          validatePhoneNumber($phoneField);
        };

        $phoneField.blur(function () {
          validatePhoneNumber($phoneField);
        });

        // Validate phone number when modified
        $phoneField.on('input', function () {
          validatePhoneNumber($(this));
        });

        $('[data-step] form [type="submit"]').on('click', function (e) {
          e.preventDefault();
          validatePhoneNumber($phoneField);
          if (phoneNumberValidated) {
            $('[data-step] form').trigger('submit');
          }
        });

        $('[data-step] form').on('keypress', function (e) {
          if (e.keyCode === 13) {
            e.preventDefault();
            $('[data-step] form [type="submit"]').trigger('click');
          }
        });
      }
      else if (Shopify.Checkout.step === 'shipping_method') {
        addShippingSectionSubtitle($);
        
        clearInterval(timerInterval);
        document.getElementsByClassName('checkcout-countdown')[0].style.display = 'none';

        {% if request.locale.iso_code == 'fr' %}
        $('[data-shipping-method-label-title="Standard Delivery"]').text('Livraison Standard');
        {% endif %}

        $(".order-summary-toggle").click(function () {
          $(".checkout_upsell").addClass("order-summary--is-expanded");
        });
      }
      else if (Shopify.Checkout.step === 'payment_method') {
        disablePaybrightPaymentMethod($);
        clearInterval(timerInterval);
        document.getElementsByClassName('checkcout-countdown')[0].style.display = 'none';

      }

      if (Shopify.Checkout.step === 'contact_information' || Shopify.Checkout.step === 'shipping_method') {
        const $discountCodeInput = $('#checkout_reduction_code');
        if ($discountCodeInput && $discountCodeInput.length) {
          const $parent = $discountCodeInput.parent().parent().parent();
          if (!$parent.hasClass('field--error')) {
            $parent.append(`
              <p class="field__message field__message--error">{{ 'shopify.checkout.order_summary.discount_sublabel' | t }}</p>
            `);
            $parent.toggleClass('field--info', true);
          }
          $discountCodeInput.on('keyup', function() {
            $parent.toggleClass('field--error', false);
            $parent.toggleClass('field--info', true);
            $parent.find('.field__message--error').text(`{{ 'shopify.checkout.order_summary.discount_sublabel' | t }}`);
          });
        }
      }

      if (!$('.total-saved-line').length) {
        $('.total-line-table__footer').append(`
          <tr class="total-saved-line">
            <td></td>
            <td class="total-line__price payment-due" style="text-align: right; padding-top: 5px">
              <span class="total-saved-text">${totalSavedText}</span>
            </td>
          </tr>
        `);
      }

      const newDiscountCode = $('.reduction-code').length ? $('.reduction-code').text() : null;
      if (newDiscountCode === discountCode) {
        return;
      }
      discountCode = newDiscountCode;
  
      $.get(window.location.href, function(html) {
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');
        totalSavedText = doc.querySelector('#total-saved-amount').value;
        $('.total-saved-text').text(totalSavedText);
      });

    });
  })(Checkout.$);

  function showConfirmPopup($) {
    $('#leaving-checkout-popup').css('display', 'block');
    $('html, body').addClass('disable-scrolling');
  }

  // CONTACT INFORMATION
  function validatePhoneNumber($phoneField) {
    phoneNumberValidated = false;
    // Remove automatic formatting triggers
    $phoneField.removeAttr('data-phone-formatter data-phone-formatter-country-select'); 1
    $phoneField.val($phoneField.val().replace(/[^0-9]/g, ''));

    let errorClass = 'field--error-plus-dynamic';
    let errorMessageSelector = '.field__message--error-plus-dynamic';

    // Check input for character limit and remove letters
    let minChars = 11, maxChars = 13;
    let errorMessage = "Enter a valid phone number (11-13 digits)";

    let phoneLength = $phoneField.val().length;
    if (phoneLength !== 0 && (phoneLength < minChars || phoneLength > maxChars)) {
      // Not enough characters, show error on input.
      if (!$phoneField.hasClass(errorClass)) {
        $phoneField.addClass(errorClass);
        $phoneField.closest('[data-address-field]').after("<p class='error-message field__message--error-plus-dynamic'>" + errorMessage + "</p>");
      }
    } else {
      // Phone number is valid. Remove errors and continue.
      $phoneField.removeClass(errorClass);
      $phoneField.closest('[data-address-field]').nextAll(errorMessageSelector).remove();
      phoneNumberValidated = true;
    }
  }

  function addTaxesBreakdown($) {
    let totalShippingPrice = $(".total-line.total-line--shipping .total-line__price span");
    if (totalShippingPrice) {
      totalShippingPrice.text("FREE");
    }

    let $provinceSelector = $("#checkout_shipping_address_province");

    if ($provinceSelector.val()) {
      breakdownTax($);
    }

    $provinceSelector.on("change", function (e) {
      e.preventDefault();
      breakdownTax($);
    });
  }

  function breakdownTax($) {
    let $taxLabel = $('.total-line.total-line--taxes .total-line__name');
    let $taxPrice = $('.total-line.total-line--taxes .total-line__price');
    let checkoutSubtotal = extractPrice($('.total-line.total-line--subtotal [data-checkout-subtotal-price-target]').attr('data-checkout-subtotal-price-target'));

    const taxSubtotal = $('.tax-subtotal');
    if (taxSubtotal) {
      taxSubtotal.remove();
    }

    let $selectedProvince = $("#checkout_shipping_address_province option:selected");
    let selectedProvince = $selectedProvince.val();
    const taxApplied = TAXES.find((tax) => tax.value === selectedProvince);
    const { labels, totalRate } = taxApplied;

    {% if request.locale.iso_code == 'fr' %}
      if (labels && (labels.length === 1)) {
        $taxLabel.text(`${labels}`);
        const value = (checkoutSubtotal / 10000 * totalRate).toFixed(2);
        $taxPrice.html(`<span class="order-summary__emphasis">${value.replace('.', ',')} $</span>`);
      } else if (labels && (labels.length > 1)) {
        let taxTotal = 0;
        const $totalTable = $('.total-line-table__tbody');
        labels.forEach((label) => {
          const { subLabel, rate } = label;
          const value = (checkoutSubtotal / 10000 * rate).toFixed(2);
          $totalTable.append(`<tr class="total-line tax-subtotal"><th class="total-line__name">Tax (${subLabel} ${rate}%)</th><td class="total-line__price"><span class="order-summary__emphasis">${value.replace('.', ',')} $</span></td></tr>`);
          taxTotal += (+value);
        });

        $taxLabel.text("Taxes");
        $taxPrice.html(`<span class="order-summary__emphasis">${taxTotal.toFixed(2).replace('.', ',')} $</span>`);
      }
    {% else %}
      if (labels && (labels.length === 1)) {
        $taxLabel.text(`${labels}`);
        const value = ((checkoutSubtotal / 10000) * totalRate).toFixed(2);
        $taxPrice.html(`<span class="order-summary__emphasis">$${value}</span>`);
      } else if (labels && (labels.length > 1)) {
        let taxTotal = 0;
        const $totalTable = $('.total-line-table__tbody');
        labels.forEach((label) => {
          const { subLabel, rate } = label;
          const value = ((checkoutSubtotal / 10000) * rate).toFixed(2);
          $totalTable.append(`<tr class="total-line tax-subtotal"><th class="total-line__name">Tax (${subLabel} ${rate}%)</th><td class="total-line__price"><span class="order-summary__emphasis">$${value}</span></td></tr>`);
          taxTotal += (+value);
        });

        $taxLabel.text("Taxes");
        $taxPrice.html(`<span class="order-summary__emphasis">$${taxTotal.toFixed(2)}</span>`);
      }
    {% endif %}
  }

  function extractPrice(string) {
    if (string) {
      const commaPrice = string.match(/([\d,.]+)/g);
      const price = commaPrice.length ? commaPrice[0].replace(/,/, '') : '';
      return price ? +price : '';
    }
  }

  // SHIPPING METHOD
  function addShippingSectionSubtitle($) {
    var node = document.querySelector(".section--shipping-method > .section__header > .section__title"),
      ele = document.createElement("p");

    ele.className = "para";
    ele.innerHTML = "For us to deliver your items faster, we may split your into two or more shipments.";
    node.parentNode.insertBefore(ele, node.nextSibling);

    var node1 = document.querySelector(".content-box > .content-box__row > .radio-wrapper"),
      ele1 = document.createElement("p");

    ele1.className = "para2";
    ele1.innerHTML = "Please expect delivery to be made within 2-4 business days for Ontario, or 4-8 business days for the rest of Canada.";
    node1.parentNode.insertBefore(ele1, node1.nextSibling);
  }
  

  // PAYMENT METHOD
  function disablePaybrightPaymentMethod($) {
    let hasDiscountApplied = $(".reduction-code").length || $(".reduction-code__text").length;
    let $paymentSection = $(".section--payment-method [data-payment-subform='required']");
    if (hasDiscountApplied) {
      let $gatewayFields = $paymentSection.find(`[data-gateway-name]`);
      $gatewayFields.each(function (i, elem) {
        let dataGatewayName = $(elem).attr("data-gateway-name");
        if (PAYMENT_GATEWAYS_NOT_ALLOWED.includes(dataGatewayName)) {
          let paybrightIsNotAllowMsg = 'PayBright cannot be used in conjunction with other discounts and promotions.';
          let dataSubfield = $(elem).attr("data-select-gateway");
          let $gateway = $paymentSection.find(`#checkout_payment_gateway_${dataSubfield}`);
          let $gatewaySubfields = $paymentSection.find(`#payment-gateway-subfields-${dataSubfield}`);
          $gatewaySubfields.hide();
          $(elem).attr('disabled', 'disabled');
          $(elem).addClass('disable-payment-method');
          $(elem).children().attr("disabled", "disabled");
          $(elem).children().addClass('disable-payment-method');
          $gateway.attr('disabled', 'disabled');
          $gateway.addClass('disable-payment-method');
          $(elem).after(`<p class="paybright-messages">${paybrightIsNotAllowMsg}</p>`);
        }
      });
    }
  }
</script>

<script src="{{ 'custom-checkout.js' | asset_url }}" defer="defer"></script>

{% if saved > 0 %}
  <input id="total-saved-amount" type="hidden" value="{% if saved > 0 %}{{ 'shopify.checkout.order_summary.you_save' | t: saved: saved_amount }}{% endif %}" disabled>
{% endif %}

{% for item in checkout.line_items %}
  {%- if item.variant.compare_at_price != item.final_price -%}
    <input id="{{ item.key }}" type="hidden" name="original_line_price" value="{{ item.variant.compare_at_price | times: item.quantity | money }}" disabled>
  {% else %}
    <input id="{{ item.key }}" type="hidden" name="original_line_price" value="" disabled>
  {% endif %}
{% endfor %}

<style>
  .tax-subtotal .total-line__name {
    padding-left: 1rem;
  }

  .paybright-messages {
    margin-left: 2.8rem;
    margin-bottom: 0.5rem;
    cursor: not-allowed;
  }

  .disable-payment-method {
    cursor: not-allowed;
  }

  .error-message {
    font-weight: 400;
    color: #f01130;
    margin-top: 0.5rem;
    margin-left: 0.5rem;
  }

  .field--error-plus-dynamic {
    border: 2px solid #f01130 !important;
  }

  .disable-scrolling {
    overflow: hidden;
    height: 100%;
  }

  .section__title {
    text-transform: capitalize;
    color: #FF8200 !important;
    font-size: 2em;
    font-family: Kepler Std Bold Semicondensed Display;
  }

  .alternative-payment-separator__content {
    padding-bottom: 1rem;
  }
  
  #review-shipping-address {
    margin-bottom: 1rem;
  }

  .original-line-price {
    text-decoration: line-through;
    font-weight: 400;
    color: #b1b3d5 !important;
  }

  .field--info .field__input {
    border-color: inherit;
    -webkit-box-shadow: none;
    box-shadow: none;
  }
  .field--info .field__message--error{
    color: #b1b3d5;
    display: block;
  }

</style>
