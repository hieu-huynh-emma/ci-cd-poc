{% assign affiliates = section.blocks | where: "type", "affiliate" %}

{{ 'affiliate-banners.css' | asset_url | stylesheet_tag }}

<section id="affiliate-announcement-bar-section"></section>

<script>
  const allAffiliateBanners = [
		{% for block in affiliates %}
      {% assign affiliate = block.settings %}
      {% assign badge = blank %}
      {% if affiliate.badge %}
        {% assign badge = affiliate.badge | image_url: width: 400 %}
      {% endif %}
      {
        source: "{{ affiliate.heading }}",
        logo: "{{ affiliate.logo | image_url: width: 400 }}",
        badge: "{{ badge }}",
        message: "{{ affiliate.message }}",
        background_color: "{{ affiliate.background_color }}",
        text_color: "{{ affiliate.text_color }}",
      }
      {%- if forloop.length > 0 -%}
        {% unless forloop.last %},{% endunless -%}
      {%- endif -%}
		{% endfor %}
  ];

  function blockSearchIndexing() {
    const meta = document.createElement('meta');
    meta.setAttribute("name", "robots");
    meta.setAttribute("content", "noindex");

    document.getElementsByTagName('head')[0].appendChild(meta);
  }

  function renderAffiliateBanner(affiliate) {
    const {url, badge, logo, message, background_color, text_color} = affiliate;

    const affiliateAnnouncementBarSection = $("#affiliate-announcement-bar-section")
    affiliateAnnouncementBarSection.css({
      '--bg-color': background_color,
      '--text-color': text_color,
       'display': "flex"
    });

    affiliateAnnouncementBarSection.html(`
          <a href="${url || "#"}" class="affiliate-container">
            <img class="affiliate-logo" src="${logo}"/>
            <p>${message}</p>
          </a>
        `)

    $("#shopify-section-announcement-bar").replaceWith(affiliateAnnouncementBarSection);

    $("#shopify-section-header").css({
      "top": "calc(50px - 1px)"
    })

    $("#risk-free-banner-section").css({
      "margin": 0
    })


    if(badge) $("#affiliate-badge").append(`<img src="${badge}" />`)
  }

  function guardAffiliateBanner() {
    const urlParams = new URLSearchParams(window.location.search);

    const targetSource = urlParams.get("affiliate_source");

    if (!targetSource) return

    const affiliate = allAffiliateBanners.find(({source}) => source === targetSource);

    if (!affiliate) return

    blockSearchIndexing();

    renderAffiliateBanner(affiliate)
  }

  $(document).ready(function () {
    setTimeout(guardAffiliateBanner, 500)
  })
</script>

{% schema %}
{
  "name": "Affiliate Banners",
  "blocks": [
    {
      "type": "affiliate",
      "name": "Affiliate",
      "settings": [
        {
          "id": "heading",
          "type": "text",
          "label": "Affiliate Source"
        },
        {
          "type": "image_picker",
          "id": "logo",
          "label": "Affiliate Logo"
        },
        {
          "type": "image_picker",
          "id": "badge",
          "label": "Affiliate Badge"
        },
        {
          "type": "richtext",
          "id": "message",
          "label": "Affiliate Message"
        },
        {
          "type": "color",
          "id": "background_color",
          "label": "Background Color"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text Color"
        },
        {
          "type": "url",
          "id": "url",
          "label": "URL"
        }
      ]
    }
  ]
}
{% endschema %}
