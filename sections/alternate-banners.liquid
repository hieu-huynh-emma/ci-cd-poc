<style>
  .alternate-banner-section-wrapper {
    padding: 1rem;
    background-color: white;
  }

  .alternate-banner-section-wrapper .item-wrapper {
    display: none;
    flex-direction: column;
    position: relative;
    min-height: 30rem;
  }

  .alternate-banner-section-wrapper .progress-bar {
    width: 100%;
    height: 8px;
    background: #F0F0F5;
    border-radius: 8px;
    display: flex;
  }

  .alternate-banner-section-wrapper .bar {
    display: inline-block;
    height: 100%;
    width: 25%;
    border-radius: 8px;
  }

  .alternate-banner-section-wrapper .bar.active {
    background-color: #55576F;
  }

  .item-wrapper img {
    border-radius: 10px;
    width: 100%;
    height: 15rem;
    object-fit: cover;
    object-position: center;
  }

  .item-wrapper h3 {
    font-weight: 400;
    font-size: 26px;
    margin: 1rem 0;
  }

  .item-wrapper p {
    font-size: 14px;
    margin-bottom: 10px;
  }

  /* Next & previous buttons */
  .item-wrapper .prev,
  .item-wrapper .next {
    cursor: pointer;
    position: absolute;
    top: 7.5rem;
    width: 24px;
    height: 36px;
    padding: 16px;
    font-weight: bold;
    font-size: 18px;
    user-select: none;
    background: rgba(255, 255, 255, 0.6);
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .item-wrapper .next {
    right: 0;
  }

  .item-wrapper .content-wrapper {
    flex-grow: 1;
  }


  @media (min-width: 768px) {
    .alternate-banner-section-wrapper {
      padding: 4rem;
    }

    .alternate-banner-section-wrapper .progress-bar,
    .item-wrapper .prev,
    .item-wrapper .next {
      display: none;
    }

    .alternate-banner-section-wrapper .item-wrapper {
      display: flex !important;
      flex-direction: row;
      height: 28rem;
      margin-bottom: 2.5rem;
    }

    .alternate-banner-section-wrapper .item-wrapper:nth-child(even) {
      flex-direction: row-reverse;
    }

    .item-wrapper img {
      width: 60%;
      height: 100%;
    }

    .item-wrapper h3 {
      font-size: 36px;
    }

    .item-wrapper p {
      font-size: 16px;
    }

    .item-wrapper .content-wrapper {
      width: 40%;
      display: flex;
      flex-flow: column;
      padding: 0 3rem;
      justify-content: center;
    }
  }

</style>
{% assign items = section.blocks | where: "type", "item" %}
<section class="alternate-banner-section-wrapper">
  <div class="alternate-banner-container">
    {% for item in items %}
      <div class="item-wrapper">
        {% render 'image-tag', image_src: item.settings.image, width: 1024 %}
        <div class="content-wrapper">
          <h3>{{ item.settings.title }}</h3>
          <p>{{ item.settings.content }}</p>
        </div>
        <a class="prev" onclick="nextBanner(-1)">&#8592;</a>
        <a class="next" onclick="nextBanner(1)">&#8594;</a>
      </div>
    {% endfor %}
    <div class="progress-bar">
      {% for item in items %}
        <span class="bar"></span>
      {% endfor %}
    </div>
  </div>
</section>
<script>
  let bannerIndex = 1
  showBanner(bannerIndex)

  function nextBanner(n) {
    showBanner(bannerIndex += n)
  }

  function showBanner(n) {
    let i
    let banners = document.getElementsByClassName('item-wrapper')
    let bars = document.getElementsByClassName('bar')
    if (n > banners.length) {
      bannerIndex = 1
    }
    if (n < 1) {
      bannerIndex = banners.length
    }
    for (i = 0; i < banners.length; i++) {
      banners[i].style.display = 'none'
    }
    for (i = 0; i < bars.length; i++) {
      bars[i].className = bars[i].className.replace(' active', '')
    }
    banners[bannerIndex - 1].style.display = 'flex'
    bars[bannerIndex - 1].className += ' active'
  }
</script>
{% schema %}
{
  "name": "Alternate Banners",
  "max_blocks": 4,
  "blocks": [
    {
      "type": "item",
      "name": "Item",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title"
        },
        {
          "type": "textarea",
          "id": "content",
          "label": "Content"
        }
      ]
    }
  ]
}
{% endschema %}
