{% assign affiliates = section.blocks | where: "type", "affiliate" %}


<section id="affiliate-announcement-bar-section"></section>

<script>
    const allAffiliateBanners = [
      {% for block in affiliates %}
      {% assign affiliate = block.settings %}
      {% assign badge = blank %}
      {% if affiliate.badge %}
      {% assign badge = affiliate.badge | image_url: width: 400 %}
      {% endif %}
        {
            source: "{{ affiliate.heading }}",
            logo: "{{ affiliate.logo | image_url: width: 400 }}",
            badge: "{{ badge }}",
            message: "{{ affiliate.message }}",
            background_color: "{{ affiliate.background_color }}",
            text_color: "{{ affiliate.text_color }}",
        }
      {%- if forloop.length > 0 -%}
      {% unless forloop.last %},{% endunless -%}
      {%- endif -%}
      {% endfor %}
    ];

    function blockSearchIndexing() {
        const meta = document.createElement('meta');
        meta.setAttribute("name", "robots");
        meta.setAttribute("content", "noindex");

        document.getElementsByTagName('head')[0].appendChild(meta);
    }

    function renderAffiliateBanner(affiliate) {
        const {url, badge, logo, message, background_color, text_color} = affiliate;

        const $el = $("#affiliate-announcement-bar-section")
        $el.css({
            '--bg-color': background_color,
            '--text-color': text_color,
            'display': "flex"
        });

        $el.html(`
          <a href="${url || "#"}" class="affiliate-container">
            <img class="affiliate-logo" src="${logo}"/>
            <p>${message}</p>
          </a>
        `)

        const $header = $("#shopify-section-sections--16283442413731__header")

        $header.css({
            'top': 'calc(54px - 1px)'
        })

        $("#announcement-bar").replaceWith($el);

        if (badge) $("#affiliate-badge").append(`<img src="${badge}" />`)
    }

    function guardAffiliateBanner() {
        const urlParams = new URLSearchParams(window.location.search);

        const targetSource = urlParams.get("affiliate_source");

        if (!targetSource) return

        const affiliate = allAffiliateBanners.find(({source}) => source === targetSource);

        if (!affiliate) return

        blockSearchIndexing();

        renderAffiliateBanner(affiliate)
    }

    $(document).ready(function () {
        setTimeout(guardAffiliateBanner, 500)
    })
</script>

{% schema %}
{
  "name": "Affiliate Banners",
  "blocks": [
    {
      "type": "affiliate",
      "name": "Affiliate",
      "settings": [
        {
          "id": "heading",
          "type": "text",
          "label": "Affiliate Source"
        },
        {
          "type": "image_picker",
          "id": "logo",
          "label": "Affiliate Logo"
        },
        {
          "type": "image_picker",
          "id": "badge",
          "label": "Affiliate Badge"
        },
        {
          "type": "richtext",
          "id": "message",
          "label": "Affiliate Message"
        },
        {
          "type": "color",
          "id": "background_color",
          "label": "Background Color"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text Color"
        },
        {
          "type": "url",
          "id": "url",
          "label": "URL"
        }
      ]
    }
  ]
}
{% endschema %}
