{{ 'emma-fonts.css' | asset_url | stylesheet_tag }}
{{ 'checkout.css' | asset_url | stylesheet_tag }}
<script src="{{ 'custom-checkout.js' | asset_url }}" defer="defer"></script>

{% assign recycling_fee_states = 'California|Connecticut|Rhode Island' | split: '|' %}

{% assign saved = 0.00 %}
{% assign total_compare_at_price = 0.00 %}
{% assign total_line_level_discount = 0.00 %}
{% assign total_line_price = 0.00 %}

{% for item in checkout.line_items %}
  {% assign originalPrice = item.variant.compare_at_price | default: item.variant.price %}

  {% assign total_compare_at_price = originalPrice | times: item.quantity | plus: total_compare_at_price %}
  {% assign total_line_level_discount = item.line_level_total_discount | plus: total_line_level_discount %}
  {% assign total_line_price = originalPrice | times: item.quantity | minus: item.original_line_price | plus: total_line_price %}
{% endfor %}

{% assign saved = total_line_price | plus: checkout.discounts_amount %}
{% assign total_original_price = total_compare_at_price | money %}
{% assign promo_discount = total_line_level_discount | money %}
{% assign sale_discount = total_line_price %}

{% assign promo_code_allow = true %}
{% assign promo_codes = '' %}
{% assign line_item_discounted = 0.0 %}
{% assign line_item_discount_code = '' %}

{% for discount_application in checkout.discount_applications %}
  {% if promo_codes == '' %}
    {% assign promo_codes = discount_application.title %}
  {% else %}
    {% assign promo_codes = promo_codes | append: '|' | append: discount_application.title %}
  {% endif %}
  {% if discount_application.type != 'script' %}
    {% assign promo_code_allow = false %}
  {% endif %}
  {% if discount_application.target_selection != 'all' %}
    {% if discount_application.type != 'script' and discount_application.total_allocated_amount > 0 %}
      {% assign line_item_discounted = line_item_discounted | plus: discount_application.total_allocated_amount %}
      {% if line_item_discount_code == '' %}
        {% assign line_item_discount_code = discount_application.title %}
      {% else %}
        {% assign line_item_discount_code = line_item_discount_code | append: '|' | append: discount_application.title %}
      {% endif %}
    {% else %}
      {% assign sale_discount = sale_discount | plus: discount_application.total_allocated_amount %}
      {% assign saved = saved | plus: discount_application.total_allocated_amount %}
    {% endif %}
  {% endif %}
{% endfor %}

{% assign saved_amount = saved | money | replace: '.00', '' %}
{% assign sale_discount = sale_discount | money %}

<input
  id="promo-codes" type="hidden"
  value="{{ promo_codes }}"
  disabled
>
<input
  id="allow-more-promo-code" type="hidden"
  value="{{ promo_code_allow }}"
  disabled
>
<input
  id="line-item-discount-code" type="hidden"
  value="{{ line_item_discount_code | split: '|' | join: ' + ' }}"
  disabled
>
<input
  id="line-item-discounted" type="hidden"
  value="{{ line_item_discounted | money }}"
  disabled
>

<input
    id="load-up-disclaimer-text" type="hidden"
    value="{{ 'shopify.checkout.load-up-disclaimer' | t }}"
    disabled
>

{% if saved > 0 %}
  <input
    id="total-saved-amount" type="hidden"
    value="{% if saved > 0 %}{{ 'shopify.checkout.order_summary.you_save' | t: saved: saved_amount }}{% endif %}"
    disabled
  >
{% endif %}

<input
  id="promo-discount" type="hidden"
  value="{% if total_line_price > 0 %}{{ promo_discount }}{% endif %}"
  disabled
>

{% assign valid_for_recycling_fee = false %}
{% assign is_los_angeles = false %}
{% assign zip = checkout.shipping_address.zip | times: 1 %}
{% if zip >= 90001 and zip <= 90230 %}
  {% assign is_los_angeles = true %}
{% endif %}
{% assign recycling_fees = 0.0 %}
{% for item in checkout.line_items %}
  {% if item.product.tags contains 'Mattresses' %}
    {% assign valid_for_recycling_fee = true %}
    {% case checkout.shipping_address.province %}
      {% when 'California' %}
        {% assign recycling_fees = item.quantity | times: 10.5 | plus: recycling_fees %}
      {% when 'Connecticut' %}
        {% assign recycling_fees = item.quantity | times: 16.0 | plus: recycling_fees %}
      {% when 'Rhode Island' %}
        {% assign recycling_fees = item.quantity | times: 11.75 | plus: recycling_fees %}
    {% endcase %}
  {% endif %}
{% endfor %}

<script type="text/javascript" defer>

  (function ($) {
    let discountCodes = $('#promo-codes').val().split('|');
    let promoDiscount = '{{ promo_discount }}';
    let totalSavedText = '{% if saved > 0 %}{{ 'shopify.checkout.order_summary.you_save' | t: saved: saved_amount }}{% endif %}';
    let observer = null;

    function refreshCheckoutUI() {
      const $recyclingFeesEl = $('.recycling-fee .total-line__name span');
      if ($recyclingFeesEl.length && !$recyclingFeesEl.text().startsWith('Recycling fee')) {
        $recyclingFeesEl.text(`Recycling fee${Shopify.Checkout.step === "contact_information" ? " (estimated)" : ""}`);
      }
      let $promoCode = $('.total-line--reduction:not(.detached)');
      if ($promoCode.length) {
        $promoCode.detach().addClass('detached');
        $('.total-line.total-line--subtotal').after($promoCode);
      }
    }

    {% if valid_for_recycling_fee and checkout.shipping_address.country_code == 'US' and recycling_fee_states contains checkout.shipping_address.province %}
    $(document).ready(function () {
      observer = new MutationObserver(function () {
        refreshCheckoutUI();
        observer && observer.disconnect();
      });
      $('body').click('#checkout_submit, .tag__button', function () {
        observer && observer.observe(document.querySelector('.sidebar'), { subtree: true, childList: true });
      });
    });
    {% endif %}

    $(document).on('page:load page:change', function () {
      if (Shopify.Checkout.step === 'shipping_method') {
        addShippingSectionSubtitle($);
      }

      {% if valid_for_recycling_fee and checkout.shipping_address.country_code == 'US' and recycling_fee_states contains checkout.shipping_address.province %}
      setTimeout(refreshCheckoutUI, 100);
      {% endif %}
      let discountCodes = $('#promo-codes').val().split('|');
      let allowPromoCode = $('#allow-more-promo-code').val() === 'true';
      let onlyOneCodeAllowedText = '{{ 'shopify.checkout.order_summary.only_one_code_allowed' | t }}';
      let promoText = '{{ 'shopify.checkout.order_summary.no_promo_yet' | t }}';
      let promoCodeText = $('.order-summary__section--discount .reduction-code__text').text();

      let totalOriginalPrice = '{{ total_original_price }}';
      let saleDiscount = '{{ sale_discount }}';

      const $totalTable = $('.total-line-table__tbody');

      let lineItemDiscounted = $('#line-item-discounted').val();
      let lineItemDiscountCode = $('#line-item-discount-code').val();
      if (lineItemDiscounted) {
        $('.total-line--subtotal').before(`<tr class="total-line promo-code"><th class="total-line__name">{{ 'shopify.checkout.order_summary.promo_code' | t }} (${lineItemDiscountCode}) </th><td class="total-line__price"><span class="order-summary__emphasis" style="color: red"> - ${lineItemDiscounted}</span></td></tr>`);
      }

      $totalTable.prepend(`<tr class="total-line sale-discount"><th class="total-line__name">{{ 'shopify.checkout.order_summary.sale_discount' | t }}</th><td class="total-line__price"><span class="order-summary__emphasis">- ${saleDiscount}</span></td></tr>`);
      $('.total-line.total-line--reduction').insertAfter('.total-line.sale-discount');
      $totalTable.prepend(`<tr class="total-line original_price"><th class="total-line__name">{{ 'shopify.checkout.order_summary.original_price' | t }}</th><td class="total-line__price"><span class="order-summary__emphasis">${totalOriginalPrice}</span></td></tr>`);

      let $taxLine = $('.total-line--taxes');
      if ($taxLine.length && !$taxLine.hasClass('detached')) {
        $taxLine.detach().addClass('detached');
        $('.total-line.total-line--subtotal').after($taxLine);
      }

      let $promoCode = $('.total-line--reduction:not(.detached)');
      if ($promoCode.length) {
        $promoCode.detach().addClass('detached');
        $('.total-line.total-line--subtotal').after($promoCode);
      }

      if (lineItemDiscountCode) {
        $(".total-line.promo-code").show();
      } else {
        $(".total-line.promo-code").hide();
      }

      if (!allowPromoCode) {
        var replacementTag = 'div';
        $(".order-summary__section--discount form.edit_checkout .fieldset").hide();
        promoText = '{{ 'shopify.checkout.order_summary.promo_applied' | t }}';
      } else {
        $(".order-summary__section--discount form.edit_checkout .fieldset").show();
      }

      if (!$('.promo-text-wrapper').length) {
        let $discountSection = $('#order-summary .order-summary__section--discount').first();
        $discountSection.prepend(
          `<div class="promo-text-wrapper">
            <p>${promoText}</p>
            <div class="discount-tooltip">&#9432;
              <span class="discount-tooltip-text">${onlyOneCodeAllowedText}</span>
            </div>
          </div>`
        );
      }

      if (!$('.total-saved-line').length) {
        $('.total-line-table__footer').append(`
          <tr class="total-saved-line">
            <td></td>
            <td class="total-line__price payment-due" style="text-align: right; padding-top: 5px">
              <span class="total-saved-text">${totalSavedText}</span>
            </td>
          </tr>
        `);
      }

      renderSSLText();

      {% if valid_for_recycling_fee and checkout.shipping_address.country_code == 'US' and recycling_fee_states contains checkout.shipping_address.province %}
      renderRecyclingFees();
      {% endif %}

      setTimeout(reFormatPrices, 100);
    });

    // intercept http request to handling user interaction with promo code
    const oldXMLHttpRequest = XMLHttpRequest;
    XMLHttpRequest = function () {
      var actual = new oldXMLHttpRequest();
      var self = this;
      this.onreadystatechange = null;
      actual.onreadystatechange = function () {
        if (this.readyState == 4) {
          const url = new URL(self.responseURL)
          const searchParams = new URLSearchParams(url.search);
          const onThankYouPage = window.location.pathname.includes('/orders/') || window.location.pathname.includes('thank_you')
          if (self.responseURL.includes('/checkouts/') && searchParams.has('step')) {
            const parser = new DOMParser();
            const doc = parser.parseFromString(self.responseText, 'text/html');
            totalSavedText = doc.querySelector('#total-saved-amount')?.value;
            const promoCodes = doc.querySelector('#promo-codes')?.value;
            const allowPromoCode = doc.querySelector('#allow-more-promo-code')?.value;
            const lineItemDiscounted = doc.querySelector('#line-item-discounted')?.value;
            const lineItemDiscountCode = doc.querySelector('#line-item-discount-code')?.value;
            $('.total-saved-text').text(totalSavedText);
            promoDiscount = doc.querySelector('#promo-discount')?.value;
            $('.promo-code .total-line__price').text(`- ${promoDiscount}`);
            $('#promo-codes').val(promoCodes);
            $('#allow-more-promo-code').val(allowPromoCode);
            $('#line-item-discounted').val(lineItemDiscounted);
            $('#line-item-discount-code').val(lineItemDiscountCode);
          } else if (onThankYouPage) {
            // remove intercepting network request
            // due to user cannot interact with promo code on thank you page
            XMLHttpRequest = oldXMLHttpRequest
          }
        }
        if (self.onreadystatechange) {
          return self.onreadystatechange();
        }
      };
      ["status", "statusText", "responseType", "response", "readyState", "responseXML", "responseText", "responseURL", "upload"].forEach(function (item) {
        Object.defineProperty(self, item, {
          get: function () {
            return actual[item];
          }
        });
      });
      ["ontimeout, timeout", "withCredentials", "onload", "onerror", "onprogress"].forEach(function (item) {
        Object.defineProperty(self, item, {
          get: function () {
            return actual[item];
          },
          set: function (val) {
            actual[item] = val;
          }
        });
      });
      ["addEventListener", "send", "open", "abort", "getAllResponseHeaders", "getResponseHeader", "overrideMimeType", "setRequestHeader"].forEach(function (item) {
        Object.defineProperty(self, item, {
          value: function () {
            return actual[item].apply(actual, arguments);
          }
        });
      });
    }

    $(document).ready(function () {
      $('.breadcrumb__item .breadcrumb__link').each(function () {
        if ($(this).attr('href').includes('/cart')) {
          $(this).parent().remove();
        }
      });
      $('.step__footer__previous-link').each(function () {
        if ($(this).attr('href').includes('/cart')) {
          $(this).remove();
        }
      });
      $('body').on('click', '#continue_button', async function(e){
        if (checkPOBoxAddress()) {
          e.preventDefault();
          alert('We do not support shipping to PO BOX addresses.\nPlease enter a residential or commercial address to proceed.');
        } else
        if ((await googleAddressValidate())) {
          e.preventDefault();
          alert('We do not support shipping to PO BOX addresses.\nPlease enter a residential or commercial address to proceed.');
          window.location.href = "/checkout?step=contact_information";
        }
      });
    });
  })(Checkout.$);

  function extractPrice(string) {
    if (string) {
      const commaPrice = string.match(/([\d,.]+)/g);
      const price = commaPrice.length ? commaPrice[0].replace(/,/, '') : '';
      return price ? +price : '';
    }
  }

  function renderSSLText() {

    const $header = $(".main .main__header");

    if (!!$header.find("nav .ssl").length) return

    $header.find("nav").append(`<div class='ssl'>
      {% render 'icon-lock' %}
      {{ settings.shopify.checkout.general.ssl | default: "Secure SSL encryption" }}</div>
    `);
  }

  function reFormatPrices() {
    $('.original-line-price, .custom-original-line-price, .total-line__price > span, .payment-due__price, .section--shipping-method .content-box__emphasis').each(function () {
      const price = $(this).text().replace('.00', '');
      $(this).text(price);
    });
  }

  function checkPOBoxAddress() {
    const poRegex = /po box/i;
    const poRegex2 = /p.o. box/i;
    const poRegex3 = /po. box/i;
    const poRegex4 = /box [0-9]/i;
    const address = Shopify.Checkout.step === 'contact_information' ? $('#checkout_shipping_address_address1').val() : {{ checkout.shipping_address.address1 | json }};
    return poRegex.test(address) || poRegex2.test(address) || poRegex3.test(address) || poRegex4.test(address);
  }

  async function googleAddressValidate() {
    const url = 'https://addressvalidation.googleapis.com/v1:validateAddress?key={{ shop.metafields.accentuate.google_address_validator_api_key }}';
    const data = {
      address: {
        regionCode: $('#checkout_shipping_address_country option:selected').attr('data-code'),
        postalCode: $('#checkout_shipping_address_zip').val(),
        languageCode: Shopify.locale,
        administrativeArea: $('#checkout_shipping_address_province').val(),
        locality: $('#checkout_shipping_address_city').val(),
        addressLines: [$('#checkout_shipping_address_address1').val()]
      }
    };

    const response = await fetch(url, {
      method: 'POST', 
      body: JSON.stringify(data), 
      headers:{
        'Content-Type': 'application/json'
      }
    });

    const result = await response.json();

    return (result.result.address.addressComponents[0].componentType == 'post_box');
  }

  function renderRecyclingFees() {
    const defaultShipping = $('.total-line--shipping');
    defaultShipping.find('.skeleton-while-loading').toggleClass('order-summary__small-text', false);
    const recyclingFees = defaultShipping.clone();
    const shipping = defaultShipping.clone();
    shipping.find('[data-checkout-total-shipping-target]').removeAttr('data-checkout-total-shipping-target');
    shipping.find('.total-line__price .skeleton-while-loading').text($('input[data-checkout-shipping-rate]:checked').attr('data-checkout-shipping-rate')).attr('data-price', $('input[data-checkout-shipping-rate]:checked').attr('data-checkout-shipping-rate'));
    defaultShipping.hide();
    recyclingFees.toggleClass('recycling-fee', true).toggleClass('total-line--shipping', false);
    recyclingFees.find('[data-checkout-total-shipping-target]').removeAttr('data-checkout-total-shipping-target');
    recyclingFees.find('.total-line__name span').text(`Recycling fee${Shopify.Checkout.step === "contact_information" ? " (estimated)" : ""}`);
    recyclingFees.find('.icon-svg').remove();
    recyclingFees.find('.skeleton-while-loading').text('{{ recycling_fees | times: 100 | money | replace: '.00', '' }}');
    defaultShipping.after(recyclingFees);
    recyclingFees.after(shipping);
    {% if valid_for_recycling_fee %}
    $('.section.section--shipping-method [data-shipping-method]').each(function () {
      let $this = $(this), $price = $this.find('.radio__label .radio__label__accessory .content-box__emphasis');
      let price = $price.text().trim().toLowerCase().replace('$', '');
      if (price === 'free') {
        $this.find('input.input-radio').attr('data-checkout-shipping-rate', 'FREE');
      }
    });
    {% endif %}
    if (Shopify.Checkout.step !== "contact_information" && !$('.recycling-fee-section').length) {
      $('.step__sections').append(`
        <div class="section recycling-fee-section">
          <div class="section__header">
            <h2 class="section__title" id="main-header" tabindex="-1">State Recycling Fees</h2>
          </div>
          <div class="section__content">
            <fieldset class="content-box">
              <legend class="visually-hidden">State Recycling Fees</legend>
              <div class="content-box__row">
                <div class="radio-wrapper">
                  <label class="radio__label">
                    <span class="radio__label__primary">State Recycling Fees
                      <br>
                      <span class="small-text">State laws in CA, CT & RI require retailers to collect a recycling fee for every mattress, foundation, or bed frame sold</span>
                    </span>
                    <span class="radio__label__accessory">
                      <span class="content-box__emphasis">{{ recycling_fees | times: 100 | money }}</span>
                    </span>
                  </label>
                </div>
              </div>
            </fieldset>
          </div>
        </div>
      `);

    }

  }

  function addShippingSectionSubtitle($) {
    {% if valid_for_recycling_fee %}
    $('.section.section--shipping-method [data-shipping-method]').each(function () {
      let $this = $(this), $price = $this.find('.radio__label .radio__label__accessory .content-box__emphasis');
      let price = $price.text().trim().toLowerCase().replace('$', '');
      if (price !== 'free') {
        const newPrice = parseFloat(price) - {{ recycling_fees }},
          priceText = newPrice ? `$${newPrice.toFixed(2).replace('.00', '')}` : 'FREE';
        $price.text(priceText).css('color', newPrice ? 'inherit' : 'red');
        $this.find('input.input-radio').attr('data-checkout-shipping-rate', priceText);
      }
    });
    {% endif %}

    // const node = document.querySelector(".section--shipping-method > .section__header > .section__title"),
    //     ele = document.createElement("p");

    // ele.className = "para";
    {% comment %}ele.innerHTML = '{{ 'shopify.checkout.shipping_method.subtitle' | t }}';{% endcomment %}
    // node.parentNode.insertBefore(ele, node.nextSibling);

    const $node = $(".content-box > .content-box__row > .radio-wrapper");
  
    const cartItemCount = $(".product").size();

    $node.after(`
        <p class="para2">
          {{ 'shopify.checkout.shipping_method.standard_delivery_no_contact' | t }}
        </p>
    `);

    // Scheduled Delivery with In-Home Setup
    const label = $('[data-shipping-method-label-title="Scheduled Delivery with In-Home Setup"]');
    if (!label || !label.length) return;
    const contentBox = label.parent().parent().parent();
    const sectionContent = contentBox.closest('.section__content');
    label.find('br').before(`
      <div data-tooltip="true" id="scheduled_delivery_tooltip" class="tooltip-container">
        <button type="button" class="tooltip-control" data-tooltip-control="true" aria-label="More information" aria-describedby="tooltip-for-scheduled-delivery" aria-controls="tooltip-for-scheduled-delivery" aria-pressed="false" placeholder="scheduled_delivery">
          <svg class="icon-svg icon-svg--color-adaptive-lighter icon-svg--size-16 icon-svg--block icon-svg--center" role="presentation" aria-hidden="true" focusable="false">
             <path
              d="M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zm.7 13H6.8v-2h1.9v2zm2.6-7.1c0 1.8-1.3 2.6-2.8 2.8l-.1 1.1H7.3L7 7.5l.1-.1c1.8-.1 2.6-.6 2.6-1.6 0-.8-.6-1.3-1.6-1.3-.9 0-1.6.4-2.3 1.1L4.7 4.5c.8-.9 1.9-1.6 3.4-1.6 1.9.1 3.2 1.2 3.2 3z">
            </path>
          </svg>
        </button>
        <span class="tooltip" role="tooltip" id="tooltip-for-scheduled-delivery">
          {{ 'shopify.checkout.scheduled_delivery_with_in_home_setup_faq_1' | t }}
        </span>
      </div>
    `);
    sectionContent.append(`
      <div id="product-removal-wrapper" class="checkbox-wrapper" style="margin-top: 0.9285714286em; {% if checkout.shipping_method.title != 'Scheduled Delivery with In-Home Setup' %}display: none{% endif %}">
        <div class="checkbox__input">
          <input name="checkout[attributes][Product Removal]" type="hidden" value="No" autocomplete="off">
          <input class="input-checkbox" type="checkbox" value="Yes" {% if checkout.attributes["Product Removal"] == 'Yes' and checkout.shipping_method.title == 'Scheduled Delivery with In-Home Setup' %}checked{% endif %} name="checkout[attributes][Product Removal]" id="checkout_product_removal" autocomplete="off">
        </div>
        <label class="checkbox__label" for="checkout_product_removal">
          {{ 'shopify.checkout.product_removal' | t }}
        </label>
        <div data-tooltip="true" id="product_removal_tooltip" class="tooltip-container">
          <button type="button" class="tooltip-control" data-tooltip-control="true" aria-label="More information" aria-describedby="tooltip-for-scheduled-delivery" aria-controls="tooltip-for-product-removal" aria-pressed="false" placeholder="product_removal">
            <svg class="icon-svg icon-svg--color-adaptive-lighter icon-svg--size-16 icon-svg--block icon-svg--center" role="presentation" aria-hidden="true" focusable="false">
              <path
              d="M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zm.7 13H6.8v-2h1.9v2zm2.6-7.1c0 1.8-1.3 2.6-2.8 2.8l-.1 1.1H7.3L7 7.5l.1-.1c1.8-.1 2.6-.6 2.6-1.6 0-.8-.6-1.3-1.6-1.3-.9 0-1.6.4-2.3 1.1L4.7 4.5c.8-.9 1.9-1.6 3.4-1.6 1.9.1 3.2 1.2 3.2 3z">
            </path>
            </svg>
          </button>
          <span class="tooltip" role="tooltip" id="tooltip-for-product-removal">
            {{ 'shopify.checkout.scheduled_delivery_with_in_home_setup_faq_2' | t }}
          </span>
        </div>
      </div>
    `);
    $('[name="checkout[shipping_rate][id]"]').change(function () {
      const checked = $('[name="checkout[shipping_rate][id]"]:checked').val().includes('white-glove-delivery');
      if (checked) {
        $('#product-removal-wrapper').show();
      } else {
        $('#product-removal-wrapper').hide();
      }
      $('.total-line.total-line--shipping .skeleton-while-loading').text($('input[data-checkout-shipping-rate]:checked').attr('data-checkout-shipping-rate')).attr('data-price', $('input[data-checkout-shipping-rate]:checked').attr('data-checkout-shipping-rate'));
      setTimeout(reFormatPrices, 10);
    });
  }
</script>

{% for item in checkout.line_items %}
  {% assign originalPrice = item.variant.compare_at_price | default: item.variant.price %}
  <input
    id="{{ item.key }}" type="hidden" name="original_line_price"
    value="{{ originalPrice | times: item.quantity | money_without_trailing_zeros }}" disabled
    data-price="{{ item.variant.price | times: item.quantity | money_without_trailing_zeros }}"
  >
{% endfor %}
